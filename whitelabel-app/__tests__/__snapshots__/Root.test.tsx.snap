// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Root/> Renders correctly: RootInitialRender 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      [
        {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        {
          "flex": 1,
        }
      }
    >
      <View
        collapsable={false}
        handlerTag={1}
        handlerType="PanGestureHandler"
        onGestureHandlerEvent={[Function]}
        onGestureHandlerStateChange={[Function]}
        onLayout={[Function]}
        style={
          [
            {
              "flex": 1,
              "overflow": "hidden",
            },
            {
              "flexDirection": "row",
            },
          ]
        }
      >
        <View
          style={
            [
              {
                "flex": 1,
              },
              {
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
            ]
          }
        >
          <View
            accessibilityElementsHidden={false}
            importantForAccessibility="auto"
            style={
              {
                "flex": 1,
              }
            }
          >
            <RNSScreenNavigationContainer
              style={
                {
                  "flex": 1,
                }
              }
            >
              <RNSScreen
                activityState={2}
                collapsable={false}
                forwardedRef={[Function]}
                gestureResponseDistance={
                  {
                    "bottom": -1,
                    "end": -1,
                    "start": -1,
                    "top": -1,
                  }
                }
                style={
                  {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": 0,
                  }
                }
              >
                <View
                  accessibilityElementsHidden={false}
                  importantForAccessibility="auto"
                  style={
                    [
                      {
                        "backgroundColor": "rgb(242, 242, 242)",
                        "flex": 1,
                      },
                      [
                        {
                          "flex": 1,
                          "flexDirection": "column-reverse",
                        },
                        undefined,
                      ],
                    ]
                  }
                >
                  <View
                    style={
                      {
                        "flex": 1,
                      }
                    }
                  >
                    <View>
                      <Text>
                        Home
                      </Text>
                    </View>
                  </View>
                  <View
                    onLayout={[Function]}
                    style={null}
                  >
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                          "zIndex": 0,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        style={
                          {
                            "backgroundColor": "rgb(255, 255, 255)",
                            "borderBottomColor": "rgb(216, 216, 216)",
                            "flex": 1,
                            "shadowColor": "rgb(216, 216, 216)",
                            "shadowOffset": {
                              "height": 0.5,
                              "width": 0,
                            },
                            "shadowOpacity": 0.85,
                            "shadowRadius": 0,
                          }
                        }
                      />
                    </View>
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "height": 44,
                          "maxHeight": undefined,
                          "minHeight": undefined,
                          "opacity": undefined,
                          "transform": undefined,
                        }
                      }
                    >
                      <View
                        pointerEvents="none"
                        style={
                          {
                            "height": 0,
                          }
                        }
                      />
                      <View
                        pointerEvents="box-none"
                        style={
                          {
                            "alignItems": "stretch",
                            "flex": 1,
                            "flexDirection": "row",
                          }
                        }
                      >
                        <View
                          collapsable={false}
                          pointerEvents="box-none"
                          style={
                            {
                              "alignItems": "flex-start",
                              "flexBasis": 0,
                              "flexGrow": 1,
                              "justifyContent": "center",
                              "marginStart": 0,
                            }
                          }
                        >
                          <View
                            accessibilityRole="button"
                            accessible={true}
                            collapsable={false}
                            focusable={true}
                            onBlur={[Function]}
                            onClick={[Function]}
                            onFocus={[Function]}
                            onResponderGrant={[Function]}
                            onResponderMove={[Function]}
                            onResponderRelease={[Function]}
                            onResponderTerminate={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              {
                                "marginHorizontal": 11,
                                "opacity": 1,
                              }
                            }
                          >
                            <Image
                              fadeDuration={0}
                              source={
                                {
                                  "testUri": "../../@react-navigation/drawer/lib/commonjs/views/assets/toggle-drawer-icon.png",
                                }
                              }
                              style={
                                [
                                  {
                                    "height": 24,
                                    "margin": 3,
                                    "resizeMode": "contain",
                                    "width": 24,
                                  },
                                  null,
                                ]
                              }
                            />
                          </View>
                        </View>
                        <View
                          collapsable={false}
                          pointerEvents="box-none"
                          style={
                            {
                              "justifyContent": "center",
                              "marginHorizontal": 16,
                              "maxWidth": 590,
                            }
                          }
                        >
                          <Text
                            accessibilityRole="header"
                            aria-level="1"
                            collapsable={false}
                            numberOfLines={1}
                            style={
                              {
                                "color": "rgb(28, 28, 30)",
                                "fontSize": 17,
                                "fontWeight": "600",
                              }
                            }
                          >
                            Home
                          </Text>
                        </View>
                        <View
                          collapsable={false}
                          pointerEvents="box-none"
                          style={
                            {
                              "alignItems": "flex-end",
                              "flexBasis": 0,
                              "flexGrow": 1,
                              "justifyContent": "center",
                              "marginEnd": 0,
                            }
                          }
                        />
                      </View>
                    </View>
                  </View>
                </View>
              </RNSScreen>
            </RNSScreenNavigationContainer>
          </View>
          <View
            accessibilityElementsHidden={true}
            importantForAccessibility="no-hide-descendants"
            style={
              [
                {
                  "backgroundColor": "rgba(0, 0, 0, 0.5)",
                  "bottom": 0,
                  "left": 0,
                  "position": "absolute",
                  "right": 0,
                  "top": 0,
                },
                {},
                {
                  "opacity": undefined,
                  "zIndex": -1,
                },
                {
                  "backgroundColor": "rgba(0, 0, 0, 0.5)",
                },
              ]
            }
          >
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                {
                  "flex": 1,
                }
              }
            />
          </View>
        </View>
        <View
          accessibilityViewIsModal={false}
          onLayout={[Function]}
          removeClippedSubviews={false}
          style={
            [
              {
                "backgroundColor": "white",
                "maxWidth": "100%",
              },
              {
                "opacity": AnimatedValue {
                  " __value": 0,
                },
                "transform": [
                  {
                    "translateX": 0,
                  },
                ],
              },
              [
                {
                  "bottom": 0,
                  "position": "absolute",
                  "top": 0,
                  "width": "80%",
                },
                {
                  "left": AnimatedValue {
                    " __value": -320,
                  },
                },
                {
                  "zIndex": 0,
                },
              ],
              [
                {
                  "backgroundColor": "rgb(255, 255, 255)",
                  "width": 320,
                },
                false,
                undefined,
              ],
            ]
          }
        >
          <RCTScrollView
            contentContainerStyle={
              [
                {
                  "paddingEnd": 0,
                  "paddingStart": 0,
                  "paddingTop": 4,
                },
                undefined,
              ]
            }
            navigation={
              {
                "canGoBack": [Function],
                "closeDrawer": [Function],
                "dispatch": [Function],
                "emit": [Function],
                "getId": [Function],
                "getParent": [Function],
                "getState": [Function],
                "goBack": [Function],
                "isFocused": [Function],
                "jumpTo": [Function],
                "navigate": [Function],
                "openDrawer": [Function],
                "reset": [Function],
                "setParams": [Function],
                "toggleDrawer": [Function],
              }
            }
            style={
              [
                {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View>
              <View
                collapsable={false}
                style={
                  [
                    {
                      "marginHorizontal": 10,
                      "marginVertical": 4,
                      "overflow": "hidden",
                    },
                    {
                      "backgroundColor": "rgba(0, 122, 255, 0.12)",
                      "borderRadius": 4,
                    },
                    undefined,
                  ]
                }
              >
                <View
                  accessibilityRole="button"
                  accessibilityState={
                    {
                      "selected": true,
                    }
                  }
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    {
                      "opacity": 1,
                    }
                  }
                >
                  <View
                    style={
                      [
                        {
                          "alignItems": "center",
                          "flexDirection": "row",
                          "padding": 8,
                        },
                        {
                          "borderRadius": 4,
                        },
                      ]
                    }
                  >
                    <View
                      style={
                        [
                          {
                            "flex": 1,
                            "marginRight": 32,
                          },
                          {
                            "marginLeft": 0,
                            "marginVertical": 5,
                          },
                        ]
                      }
                    >
                      <Text
                        numberOfLines={1}
                        style={
                          [
                            {
                              "color": "rgb(0, 122, 255)",
                              "fontWeight": "500",
                            },
                            undefined,
                          ]
                        }
                      >
                        Home
                      </Text>
                    </View>
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </View>
      </View>
    </View>
  </RNCSafeAreaProvider>
</View>
`;
